<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='OlistOnlineStore-2' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='olist_order_reviews_dataset+ (Multiple Connections)' inline='true' name='federated.0g6q0ng1dl55ti188dkou0rl63m4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='olist_order_reviews_dataset' name='textscan.0wq2kfk0uxd3np1fllr5n0udybes'>
            <connection class='textscan' directory='C:/Users/E6420/Documents/sem-3/VA-Wed/brazilian-ecommerce' filename='olist_order_reviews_dataset.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='olist_order_reviews_dataset_with_en' name='excel-direct.0cftpir1jelddn1gnsn9k0007fy3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/E6420/Desktop/olist_order_reviews_dataset_with_en.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='word_freq' name='textscan.0wdzn1e1lppawr1fixys70f7onn2'>
            <connection class='textscan' directory='C:/Users/E6420/Desktop' filename='word_freq.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[olist_order_reviews_dataset].[order_id]' />
              <expression op='[word_freq.csv+].[F1]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[olist_products_dataset.csv].[product_category_name]' />
                <expression op='[product_category_name_translation.csv].[product_category_name]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[olist_order_items_dataset.csv].[product_id]' />
                  <expression op='[olist_products_dataset.csv].[product_id]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[olist_orders_dataset.csv].[order_id]' />
                    <expression op='[olist_order_items_dataset.csv].[order_id]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[olist_order_reviews_dataset].[order_id]' />
                      <expression op='[olist_orders_dataset.csv].[order_id]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.0cftpir1jelddn1gnsn9k0007fy3' name='olist_order_reviews_dataset' table='[olist_order_reviews_dataset$]' type='table'>
                    <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
                      <column datatype='string' name='review_id' ordinal='0' />
                      <column datatype='string' name='order_id' ordinal='1' />
                      <column datatype='integer' name='review_score' ordinal='2' />
                      <column datatype='string' name='review_comment_title' ordinal='3' />
                      <column datatype='string' name='review_comment_message' ordinal='4' />
                      <column datatype='datetime' name='review_creation_date' ordinal='5' />
                      <column datatype='datetime' name='review_answer_timestamp' ordinal='6' />
                      <column datatype='string' name='review_comment_message_english' ordinal='7' />
                      <column datatype='string' name='review_title_english' ordinal='8' />
                    </columns>
                  </relation>
                  <relation connection='textscan.0wq2kfk0uxd3np1fllr5n0udybes' name='olist_orders_dataset.csv' table='[olist_orders_dataset#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='string' name='order_id' ordinal='0' />
                      <column datatype='string' name='customer_id' ordinal='1' />
                      <column datatype='string' name='order_status' ordinal='2' />
                      <column datatype='datetime' name='order_purchase_timestamp' ordinal='3' />
                      <column datatype='datetime' name='order_approved_at' ordinal='4' />
                      <column datatype='datetime' name='order_delivered_carrier_date' ordinal='5' />
                      <column datatype='datetime' name='order_delivered_customer_date' ordinal='6' />
                      <column datatype='datetime' name='order_estimated_delivery_date' ordinal='7' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.0wq2kfk0uxd3np1fllr5n0udybes' name='olist_order_items_dataset.csv' table='[olist_order_items_dataset#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='order_id' ordinal='0' />
                    <column datatype='integer' name='order_item_id' ordinal='1' />
                    <column datatype='string' name='product_id' ordinal='2' />
                    <column datatype='string' name='seller_id' ordinal='3' />
                    <column datatype='datetime' name='shipping_limit_date' ordinal='4' />
                    <column datatype='real' name='price' ordinal='5' />
                    <column datatype='real' name='freight_value' ordinal='6' />
                  </columns>
                </relation>
              </relation>
              <relation connection='textscan.0wq2kfk0uxd3np1fllr5n0udybes' name='olist_products_dataset.csv' table='[olist_products_dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='product_id' ordinal='0' />
                  <column datatype='string' name='product_category_name' ordinal='1' />
                  <column datatype='integer' name='product_name_lenght' ordinal='2' />
                  <column datatype='integer' name='product_description_lenght' ordinal='3' />
                  <column datatype='integer' name='product_photos_qty' ordinal='4' />
                  <column datatype='integer' name='product_weight_g' ordinal='5' />
                  <column datatype='integer' name='product_length_cm' ordinal='6' />
                  <column datatype='integer' name='product_height_cm' ordinal='7' />
                  <column datatype='integer' name='product_width_cm' ordinal='8' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.0wq2kfk0uxd3np1fllr5n0udybes' name='product_category_name_translation.csv' table='[product_category_name_translation#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='product_category_name' ordinal='0' />
                <column datatype='string' name='product_category_name_english' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation all='true' name='word_freq.csv+' type='union'>
            <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
              <column datatype='string' name='F1' />
              <column datatype='integer' name='F2' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.0wdzn1e1lppawr1fixys70f7onn2' name='word_freq.csv' table='[word_freq#csv]' type='table'>
              <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
                <column datatype='string' name='F1' ordinal='0' />
                <column datatype='integer' name='F2' ordinal='1' />
              </columns>
            </relation>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[word_freq.csv+].[F1]' />
          <map key='[F2]' value='[word_freq.csv+].[F2]' />
          <map key='[Table Name]' value='[word_freq.csv+].[Table Name]' />
          <map key='[customer_id]' value='[olist_orders_dataset.csv].[customer_id]' />
          <map key='[freight_value]' value='[olist_order_items_dataset.csv].[freight_value]' />
          <map key='[order_approved_at]' value='[olist_orders_dataset.csv].[order_approved_at]' />
          <map key='[order_delivered_carrier_date]' value='[olist_orders_dataset.csv].[order_delivered_carrier_date]' />
          <map key='[order_delivered_customer_date]' value='[olist_orders_dataset.csv].[order_delivered_customer_date]' />
          <map key='[order_estimated_delivery_date]' value='[olist_orders_dataset.csv].[order_estimated_delivery_date]' />
          <map key='[order_id (olist_order_items_dataset.csv)]' value='[olist_order_items_dataset.csv].[order_id]' />
          <map key='[order_id (olist_orders_dataset.csv)]' value='[olist_orders_dataset.csv].[order_id]' />
          <map key='[order_id]' value='[olist_order_reviews_dataset].[order_id]' />
          <map key='[order_item_id]' value='[olist_order_items_dataset.csv].[order_item_id]' />
          <map key='[order_purchase_timestamp]' value='[olist_orders_dataset.csv].[order_purchase_timestamp]' />
          <map key='[order_status]' value='[olist_orders_dataset.csv].[order_status]' />
          <map key='[price]' value='[olist_order_items_dataset.csv].[price]' />
          <map key='[product_category_name (product_category_name_translation.csv)]' value='[product_category_name_translation.csv].[product_category_name]' />
          <map key='[product_category_name]' value='[olist_products_dataset.csv].[product_category_name]' />
          <map key='[product_category_name_english]' value='[product_category_name_translation.csv].[product_category_name_english]' />
          <map key='[product_description_lenght]' value='[olist_products_dataset.csv].[product_description_lenght]' />
          <map key='[product_height_cm]' value='[olist_products_dataset.csv].[product_height_cm]' />
          <map key='[product_id (olist_products_dataset.csv)]' value='[olist_products_dataset.csv].[product_id]' />
          <map key='[product_id]' value='[olist_order_items_dataset.csv].[product_id]' />
          <map key='[product_length_cm]' value='[olist_products_dataset.csv].[product_length_cm]' />
          <map key='[product_name_lenght]' value='[olist_products_dataset.csv].[product_name_lenght]' />
          <map key='[product_photos_qty]' value='[olist_products_dataset.csv].[product_photos_qty]' />
          <map key='[product_weight_g]' value='[olist_products_dataset.csv].[product_weight_g]' />
          <map key='[product_width_cm]' value='[olist_products_dataset.csv].[product_width_cm]' />
          <map key='[review_answer_timestamp]' value='[olist_order_reviews_dataset].[review_answer_timestamp]' />
          <map key='[review_comment_message]' value='[olist_order_reviews_dataset].[review_comment_message]' />
          <map key='[review_comment_message_english]' value='[olist_order_reviews_dataset].[review_comment_message_english]' />
          <map key='[review_comment_title]' value='[olist_order_reviews_dataset].[review_comment_title]' />
          <map key='[review_creation_date]' value='[olist_order_reviews_dataset].[review_creation_date]' />
          <map key='[review_id]' value='[olist_order_reviews_dataset].[review_id]' />
          <map key='[review_score]' value='[olist_order_reviews_dataset].[review_score]' />
          <map key='[review_title_english]' value='[olist_order_reviews_dataset].[review_title_english]' />
          <map key='[seller_id]' value='[olist_order_items_dataset.csv].[seller_id]' />
          <map key='[shipping_limit_date]' value='[olist_order_items_dataset.csv].[shipping_limit_date]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>review_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[review_id]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_score]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_comment_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[review_comment_title]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_comment_title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_comment_message</remote-name>
            <remote-type>130</remote-type>
            <local-name>[review_comment_message]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_comment_message</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_creation_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[review_creation_date]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_creation_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_answer_timestamp</remote-name>
            <remote-type>7</remote-type>
            <local-name>[review_answer_timestamp]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_answer_timestamp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_comment_message_english</remote-name>
            <remote-type>130</remote-type>
            <local-name>[review_comment_message_english]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_comment_message_english</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_title_english</remote-name>
            <remote-type>130</remote-type>
            <local-name>[review_title_english]</local-name>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias>review_title_english</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olist_order_reviews_dataset]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id (olist_orders_dataset.csv)]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_status]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>order_status</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_purchase_timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[order_purchase_timestamp]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>order_purchase_timestamp</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_approved_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[order_approved_at]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>order_approved_at</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_delivered_carrier_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[order_delivered_carrier_date]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>order_delivered_carrier_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_delivered_customer_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[order_delivered_customer_date]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>order_delivered_customer_date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_estimated_delivery_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[order_estimated_delivery_date]</local-name>
            <parent-name>[olist_orders_dataset.csv]</parent-name>
            <remote-alias>order_estimated_delivery_date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id (olist_order_items_dataset.csv)]</local-name>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_item_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_item_id]</local-name>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias>order_item_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_id]</local-name>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias>seller_id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping_limit_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[shipping_limit_date]</local-name>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias>shipping_limit_date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freight_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freight_value]</local-name>
            <parent-name>[olist_order_items_dataset.csv]</parent-name>
            <remote-alias>freight_value</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_id (olist_products_dataset.csv)]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_category_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_category_name]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_category_name</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name_lenght</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_name_lenght]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_name_lenght</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_description_lenght</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_description_lenght]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_description_lenght</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_photos_qty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_photos_qty]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_photos_qty</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_weight_g</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_weight_g]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_weight_g</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_length_cm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_length_cm]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_length_cm</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_height_cm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_height_cm]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_height_cm</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_width_cm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_width_cm]</local-name>
            <parent-name>[olist_products_dataset.csv]</parent-name>
            <remote-alias>product_width_cm</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[product_category_name_translation.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_category_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_category_name (product_category_name_translation.csv)]</local-name>
            <parent-name>[product_category_name_translation.csv]</parent-name>
            <remote-alias>product_category_name</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_category_name_english</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_category_name_english]</local-name>
            <parent-name>[product_category_name_translation.csv]</parent-name>
            <remote-alias>product_category_name_english</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[word_freq.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[word_freq.csv+]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[word_freq.csv+]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[word_freq.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Customer Id' datatype='string' name='[customer_id]' role='dimension' type='nominal' />
      <column caption='Freight Value' datatype='real' name='[freight_value]' role='measure' type='quantitative' />
      <column caption='Order Approved At' datatype='datetime' name='[order_approved_at]' role='dimension' type='ordinal' />
      <column caption='Order Delivered Carrier Date' datatype='datetime' name='[order_delivered_carrier_date]' role='dimension' type='ordinal' />
      <column caption='Order Delivered Customer Date' datatype='datetime' name='[order_delivered_customer_date]' role='dimension' type='ordinal' />
      <column caption='Order Estimated Delivery Date' datatype='datetime' name='[order_estimated_delivery_date]' role='dimension' type='ordinal' />
      <column caption='Order Id (Olist Order Items Dataset.Csv)' datatype='string' name='[order_id (olist_order_items_dataset.csv)]' role='dimension' type='nominal' />
      <column caption='Order Id (Olist Orders Dataset.Csv)' datatype='string' name='[order_id (olist_orders_dataset.csv)]' role='dimension' type='nominal' />
      <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
      <column caption='Order Item Id' datatype='integer' name='[order_item_id]' role='dimension' type='ordinal' />
      <column caption='Order Purchase Timestamp' datatype='datetime' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
      <column caption='Order Status' datatype='string' name='[order_status]' role='dimension' type='nominal' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Product Category Name (Product Category Name Translation.Csv)' datatype='string' name='[product_category_name (product_category_name_translation.csv)]' role='dimension' type='nominal' />
      <column caption='Product Category Name' datatype='string' name='[product_category_name]' role='dimension' type='nominal' />
      <column caption='Product Category Name English' datatype='string' name='[product_category_name_english]' role='dimension' type='nominal' />
      <column caption='Product Description Lenght' datatype='integer' name='[product_description_lenght]' role='measure' type='quantitative' />
      <column caption='Product Height Cm' datatype='integer' name='[product_height_cm]' role='measure' type='quantitative' />
      <column caption='Product Id (Olist Products Dataset.Csv)' datatype='string' name='[product_id (olist_products_dataset.csv)]' role='dimension' type='nominal' />
      <column caption='Product Id' datatype='string' name='[product_id]' role='dimension' type='nominal' />
      <column caption='Product Length Cm' datatype='integer' name='[product_length_cm]' role='measure' type='quantitative' />
      <column caption='Product Name Lenght' datatype='integer' name='[product_name_lenght]' role='measure' type='quantitative' />
      <column caption='Product Photos Qty' datatype='integer' name='[product_photos_qty]' role='measure' type='quantitative' />
      <column caption='Product Weight G' datatype='integer' name='[product_weight_g]' role='measure' type='quantitative' />
      <column caption='Product Width Cm' datatype='integer' name='[product_width_cm]' role='measure' type='quantitative' />
      <column caption='Review Answer Timestamp' datatype='datetime' name='[review_answer_timestamp]' role='dimension' type='ordinal' />
      <column caption='Review Comment Message' datatype='string' name='[review_comment_message]' role='dimension' type='nominal' />
      <column caption='Review Comment Message English' datatype='string' name='[review_comment_message_english]' role='dimension' type='nominal' />
      <column caption='Review Comment Title' datatype='string' name='[review_comment_title]' role='dimension' type='nominal' />
      <column caption='Review Creation Date' datatype='datetime' name='[review_creation_date]' role='dimension' type='ordinal' />
      <column caption='Review Id' datatype='string' name='[review_id]' role='dimension' type='nominal' />
      <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
      <column caption='Review Title English' datatype='string' name='[review_title_english]' role='dimension' type='nominal' />
      <column caption='Seller Id' datatype='string' name='[seller_id]' role='dimension' type='nominal' />
      <column caption='Shipping Limit Date' datatype='datetime' name='[shipping_limit_date]' role='dimension' type='ordinal' />
      <column-instance column='[order_purchase_timestamp]' derivation='Month' name='[mn:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[product_category_name_english]' derivation='None' name='[none:product_category_name_english:nk]' pivot='key' type='nominal' />
      <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Product Category Name English)' hidden='true' name='[Action (Product Category Name English)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_category_name_english]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)' hidden='true' name='[Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:order_purchase_timestamp:ok]' />
          <groupfilter function='level-members' level='[mn:order_purchase_timestamp:ok]' />
          <groupfilter function='level-members' level='[product_category_name_english]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/E6420/Documents/sem-3/VA-Wed/tableau-workbooks/olist_order_reviews_dataset+ (Multiple Connections)_dashborad2.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/04/2019 05:01:34 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[F2]' value='[Extract].[F2]' />
            <map key='[Table Name]' value='[Extract].[Table Name]' />
            <map key='[customer_id]' value='[Extract].[customer_id]' />
            <map key='[freight_value]' value='[Extract].[freight_value]' />
            <map key='[order_approved_at]' value='[Extract].[order_approved_at]' />
            <map key='[order_delivered_carrier_date]' value='[Extract].[order_delivered_carrier_date]' />
            <map key='[order_delivered_customer_date]' value='[Extract].[order_delivered_customer_date]' />
            <map key='[order_estimated_delivery_date]' value='[Extract].[order_estimated_delivery_date]' />
            <map key='[order_id (olist_order_items_dataset.csv)]' value='[Extract].[order_id]' />
            <map key='[order_id (olist_orders_dataset.csv)]' value='[Extract].[order_id1]' />
            <map key='[order_id]' value='[Extract].[order_id2]' />
            <map key='[order_item_id]' value='[Extract].[order_item_id]' />
            <map key='[order_purchase_timestamp]' value='[Extract].[order_purchase_timestamp]' />
            <map key='[order_status]' value='[Extract].[order_status]' />
            <map key='[price]' value='[Extract].[price]' />
            <map key='[product_category_name (product_category_name_translation.csv)]' value='[Extract].[product_category_name]' />
            <map key='[product_category_name]' value='[Extract].[product_category_name1]' />
            <map key='[product_category_name_english]' value='[Extract].[product_category_name_english]' />
            <map key='[product_description_lenght]' value='[Extract].[product_description_lenght]' />
            <map key='[product_height_cm]' value='[Extract].[product_height_cm]' />
            <map key='[product_id (olist_products_dataset.csv)]' value='[Extract].[product_id]' />
            <map key='[product_id]' value='[Extract].[product_id1]' />
            <map key='[product_length_cm]' value='[Extract].[product_length_cm]' />
            <map key='[product_name_lenght]' value='[Extract].[product_name_lenght]' />
            <map key='[product_photos_qty]' value='[Extract].[product_photos_qty]' />
            <map key='[product_weight_g]' value='[Extract].[product_weight_g]' />
            <map key='[product_width_cm]' value='[Extract].[product_width_cm]' />
            <map key='[review_answer_timestamp]' value='[Extract].[review_answer_timestamp]' />
            <map key='[review_comment_message]' value='[Extract].[review_comment_message]' />
            <map key='[review_comment_message_english]' value='[Extract].[review_comment_message_english]' />
            <map key='[review_comment_title]' value='[Extract].[review_comment_title]' />
            <map key='[review_creation_date]' value='[Extract].[review_creation_date]' />
            <map key='[review_id]' value='[Extract].[review_id]' />
            <map key='[review_score]' value='[Extract].[review_score]' />
            <map key='[review_title_english]' value='[Extract].[review_title_english]' />
            <map key='[seller_id]' value='[Extract].[seller_id]' />
            <map key='[shipping_limit_date]' value='[Extract].[shipping_limit_date]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='139408' timestamp-start='2019-11-04 05:01:34.134' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>review_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[review_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_id</remote-alias>
              <ordinal>0</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_id2</remote-alias>
              <ordinal>1</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_score</remote-name>
              <remote-type>20</remote-type>
              <local-name>[review_score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_score</remote-alias>
              <ordinal>2</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_comment_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[review_comment_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_comment_title</remote-alias>
              <ordinal>3</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2575</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_comment_message</remote-name>
              <remote-type>129</remote-type>
              <local-name>[review_comment_message]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_comment_message</remote-alias>
              <ordinal>4</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21017</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_creation_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[review_creation_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_creation_date</remote-alias>
              <ordinal>5</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1895</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_answer_timestamp</remote-name>
              <remote-type>135</remote-type>
              <local-name>[review_answer_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_answer_timestamp</remote-alias>
              <ordinal>6</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_comment_message_english</remote-name>
              <remote-type>129</remote-type>
              <local-name>[review_comment_message_english]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_comment_message_english</remote-alias>
              <ordinal>7</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19555</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_title_english</remote-name>
              <remote-type>129</remote-type>
              <local-name>[review_title_english]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_title_english</remote-alias>
              <ordinal>8</ordinal>
              <family>olist_order_reviews_dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2860</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_id (olist_orders_dataset.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_id1</remote-alias>
              <ordinal>9</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customer_id</remote-alias>
              <ordinal>10</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_status</remote-alias>
              <ordinal>11</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_purchase_timestamp</remote-name>
              <remote-type>135</remote-type>
              <local-name>[order_purchase_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_purchase_timestamp</remote-alias>
              <ordinal>12</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_approved_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[order_approved_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_approved_at</remote-alias>
              <ordinal>13</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_delivered_carrier_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[order_delivered_carrier_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_delivered_carrier_date</remote-alias>
              <ordinal>14</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>53746</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_delivered_customer_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[order_delivered_customer_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_delivered_customer_date</remote-alias>
              <ordinal>15</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>56623</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_estimated_delivery_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[order_estimated_delivery_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_estimated_delivery_date</remote-alias>
              <ordinal>16</ordinal>
              <family>olist_orders_dataset.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1133</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_id (olist_order_items_dataset.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_id</remote-alias>
              <ordinal>17</ordinal>
              <family>olist_order_items_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_item_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[order_item_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_item_id</remote-alias>
              <ordinal>18</ordinal>
              <family>olist_order_items_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_id1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_id1</remote-alias>
              <ordinal>19</ordinal>
              <family>olist_order_items_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22892</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seller_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_id</remote-alias>
              <ordinal>20</ordinal>
              <family>olist_order_items_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3907</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping_limit_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[shipping_limit_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shipping_limit_date</remote-alias>
              <ordinal>21</ordinal>
              <family>olist_order_items_dataset.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>58697</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>22</ordinal>
              <family>olist_order_items_dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3869</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freight_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[freight_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freight_value</remote-alias>
              <ordinal>23</ordinal>
              <family>olist_order_items_dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8032</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_id (olist_products_dataset.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_id</remote-alias>
              <ordinal>24</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22892</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_category_name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_category_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_category_name1</remote-alias>
              <ordinal>25</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_name_lenght</remote-name>
              <remote-type>20</remote-type>
              <local-name>[product_name_lenght]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_name_lenght</remote-alias>
              <ordinal>26</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_description_lenght</remote-name>
              <remote-type>20</remote-type>
              <local-name>[product_description_lenght]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_description_lenght</remote-alias>
              <ordinal>27</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5965</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_photos_qty</remote-name>
              <remote-type>20</remote-type>
              <local-name>[product_photos_qty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_photos_qty</remote-alias>
              <ordinal>28</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_weight_g</remote-name>
              <remote-type>20</remote-type>
              <local-name>[product_weight_g]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_weight_g</remote-alias>
              <ordinal>29</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2520</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_length_cm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[product_length_cm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_length_cm</remote-alias>
              <ordinal>30</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_height_cm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[product_height_cm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_height_cm</remote-alias>
              <ordinal>31</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>223</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_width_cm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[product_width_cm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_width_cm</remote-alias>
              <ordinal>32</ordinal>
              <family>olist_products_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>185</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_category_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_category_name (product_category_name_translation.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_category_name</remote-alias>
              <ordinal>33</ordinal>
              <family>product_category_name_translation.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_category_name_english</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_category_name_english]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_category_name_english</remote-alias>
              <ordinal>34</ordinal>
              <family>product_category_name_translation.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>35</ordinal>
              <family>word_freq.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27981</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F2</remote-alias>
              <ordinal>36</ordinal>
              <family>word_freq.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>366</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>37</ordinal>
              <family>word_freq.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.583851' measure-ordering='alphabetic' measure-percentage='0.416149' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:product_category_name_english:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;books_general_interest&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fashion_bags_accessories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;home_construction&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;telephony&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;agro_industry_and_commerce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;cool_stuff&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;furniture_living_room&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pet_shop&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;audio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;drinks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;home_appliances&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;small_appliances_home_oven_and_coffee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;christmas_supplies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fashion_sport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;la_cuisine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;books_imported&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;fashion_childrens_clothes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;housewares&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;toys&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;auto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dvds_blu_ray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;home_appliances_2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;sports_leisure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;construction_tools_lights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;furniture_bedroom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;party_supplies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;air_conditioning&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;costruction_tools_garden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;furniture_mattress_and_upholstery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;security_and_services&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;consoles_games&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;musical_instruments&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;baby&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;electronics&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;home_comfort_2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;stationery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cine_photo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fashion_underwear_beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;luggage_accessories&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;computers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fixed_telephony&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;market_place&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;construction_tools_construction&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;food_drink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;office_furniture&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;construction_tools_safety&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;furniture_decor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;perfumery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;books_technical&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fashion_male_clothing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;industry_commerce_and_business&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;watches_gifts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bed_bath_table&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fashio_female_clothing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;home_confort&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tablets_printing_image&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;art&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;costruction_tools_tools&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;garden_tools&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;signaling_and_security&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;computers_accessories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;flowers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;music&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cds_dvds_musicals&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fashion_shoes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;kitchen_dining_laundry_garden_furniture&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;arts_and_craftmanship&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;diapers_and_hygiene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;health_beauty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;small_appliances&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product Categories vs Average Rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='olist_order_reviews_dataset+ (Multiple Connections)' name='federated.0g6q0ng1dl55ti188dkou0rl63m4' />
          </datasources>
          <datasource-dependencies datasource='federated.0g6q0ng1dl55ti188dkou0rl63m4'>
            <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Month' name='[mn:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_category_name_english]' derivation='None' name='[none:product_category_name_english:nk]' pivot='key' type='nominal' />
            <column caption='Order Purchase Timestamp' datatype='datetime' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Product Category Name English' datatype='string' name='[product_category_name_english]' role='dimension' type='nominal' />
            <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]'>
            <groupfilter function='level-members' level='[product_category_name_english]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:order_purchase_timestamp:ok]' />
              <groupfilter function='level-members' level='[mn:order_purchase_timestamp:ok]' />
              <groupfilter function='level-members' level='[product_category_name_english]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[avg:review_score:qk]' included-values='in-range'>
            <min>3.2999999999999998</min>
            <max>4.048</max>
          </filter>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]'>
            <groupfilter function='level-members' level='[none:product_category_name_english:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[avg:review_score:qk]</column>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]</column>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)]</column>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]</rows>
        <cols>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[avg:review_score:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product Categories vs Median Rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='olist_order_reviews_dataset+ (Multiple Connections)' name='federated.0g6q0ng1dl55ti188dkou0rl63m4' />
          </datasources>
          <datasource-dependencies datasource='federated.0g6q0ng1dl55ti188dkou0rl63m4'>
            <column-instance column='[review_score]' derivation='Median' name='[med:review_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Month' name='[mn:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_category_name_english]' derivation='None' name='[none:product_category_name_english:nk]' pivot='key' type='nominal' />
            <column caption='Order Purchase Timestamp' datatype='datetime' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Product Category Name English' datatype='string' name='[product_category_name_english]' role='dimension' type='nominal' />
            <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]'>
            <groupfilter function='level-members' level='[product_category_name_english]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:order_purchase_timestamp:ok]' />
              <groupfilter function='level-members' level='[mn:order_purchase_timestamp:ok]' />
              <groupfilter function='level-members' level='[product_category_name_english]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[med:review_score:qk]' included-values='in-range'>
            <min>2.5</min>
            <max>5.0</max>
          </filter>
          <computed-sort column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]' direction='ASC' using='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[med:review_score:qk]' />
          <slices>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[med:review_score:qk]</column>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)]</column>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]</rows>
        <cols>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[med:review_score:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What the Customers care about?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='olist_order_reviews_dataset+ (Multiple Connections)' name='federated.0g6q0ng1dl55ti188dkou0rl63m4' />
          </datasources>
          <datasource-dependencies datasource='federated.0g6q0ng1dl55ti188dkou0rl63m4'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='integer' name='[F2]' role='measure' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Month' name='[mn:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column caption='Order Purchase Timestamp' datatype='datetime' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Product Category Name English' datatype='string' name='[product_category_name_english]' role='dimension' type='nominal' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]'>
            <groupfilter function='level-members' level='[product_category_name_english]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:order_purchase_timestamp:ok]' />
              <groupfilter function='level-members' level='[mn:order_purchase_timestamp:ok]' />
              <groupfilter function='level-members' level='[product_category_name_english]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:F1:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;!!&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;!!!&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;..&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​...&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;A&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;after&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;ahead&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;all&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;already&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;always&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;am&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;an&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;AND&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;another&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;any&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;are&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;arrived&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;as&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;at&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;be&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;beautiful&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;because&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;been&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;before&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;bought&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;But&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;buy&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;by&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​came&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;can&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;come&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;company&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;correct&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;could&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;date&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;day&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;days&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;deadline&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;deadline,&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;deadline.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;deliver&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;delivered&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;delivery&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Delivery&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;delivery,&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;delivery.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;did&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;different&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;do&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;does&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;even&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;everything&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Everything&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;excellent&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Excellent&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;expected&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;far&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;fast&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Fast&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;for&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;from&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;get&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;good&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Good&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;good,&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;good.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;got&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;great&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Great&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;had&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​has&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;have&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;I&apos;m&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;if&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;it&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;It&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​just&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;know&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;lannister&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;like&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;liked&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;little&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;long&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​loved&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;made&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;me&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;missing&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;more&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;much&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;My&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;need&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;no&quot;' />
              <groupfilter from='&quot;not&quot;' function='range' level='[none:F1:nk]' to='&quot;NOT&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​on&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;one&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​only&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;or&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;order&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;other&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;paid&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;perfect&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;post&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;problem&quot;' />
              <groupfilter from='&quot;product&quot;' function='range' level='[none:F1:nk]' to='&quot;PRODUCT&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;product,&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;product.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​products&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;purchase&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;q&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;quality&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;quality.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;really&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;receive&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​received&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;recommend&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;recommend!&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;recommend.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;request&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;return&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;right&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;same&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;satisfied&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;schedule&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;schedule.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​sent&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;service&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;should&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;site&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;so&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;still&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;store&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;super&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Super&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;than&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;that&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;THE&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;there&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;they&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;They&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;this&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;time&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;time,&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;time.&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;to&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;too&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;took&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;two&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;very&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Very&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;waiting&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;want&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;We&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;well&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;were&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;what&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;when&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​which&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;will&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;with&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;within&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;without&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;would&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;wrong&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;​​yet&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;you&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:F1:nk]' direction='DESC' using='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[sum:F2:qk]' />
          <slices>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:F1:nk]</column>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (YEAR(Order Purchase Timestamp),MONTH(Order Purchase Timestamp),Product Category Name English)]</column>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <size column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[sum:F2:qk]' />
              <text column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:F1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product Category Sales Time Series</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='olist_order_reviews_dataset+ (Multiple Connections)' name='federated.0g6q0ng1dl55ti188dkou0rl63m4' />
          </datasources>
          <datasource-dependencies datasource='federated.0g6q0ng1dl55ti188dkou0rl63m4'>
            <column-instance column='[product_category_name_english]' derivation='Count' name='[cnt:product_category_name_english:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Month' name='[mn:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_category_name_english]' derivation='None' name='[none:product_category_name_english:nk]' pivot='key' type='nominal' />
            <column caption='Order Purchase Timestamp' datatype='datetime' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Product Category Name English' datatype='string' name='[product_category_name_english]' role='dimension' type='nominal' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]'>
            <groupfilter function='level-members' level='[product_category_name_english]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]' direction='ASC' using='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[cnt:product_category_name_english:qk]' />
          <slices>
            <column>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[Action (Product Category Name English)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[cnt:product_category_name_english:qk]</rows>
        <cols>([federated.0g6q0ng1dl55ti188dkou0rl63m4].[yr:order_purchase_timestamp:ok] / [federated.0g6q0ng1dl55ti188dkou0rl63m4].[mn:order_purchase_timestamp:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='olist_order_reviews_dataset+ (Multiple Connections)' name='federated.0g6q0ng1dl55ti188dkou0rl63m4' />
      </datasources>
      <datasource-dependencies datasource='federated.0g6q0ng1dl55ti188dkou0rl63m4'>
        <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
        <column-instance column='[review_score]' derivation='Median' name='[med:review_score:qk]' pivot='key' type='quantitative' />
        <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='24500' id='1' name='Sheet 1' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Sheet 2' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Sheet 3' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24500' id='10' name='Sheet 4' w='82400' x='800' y='25500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8625' id='6' name='Sheet 1' param='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[avg:review_score:qk]' type='filter' values='database' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='8' name='Sheet 2' param='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[med:review_score:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='9625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[avg:review_score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[avg:review_score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{B85144F1-42BF-437E-AFCF-B013CD9B3A61}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>%null%</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{A40E504F-83BA-4118-99A2-FB3A872E4E43}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[med:review_score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{20099533-890C-4B0F-9353-1E1FA985B943}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC0B0B93-3D0E-4D67-8E1C-B844F17E08D7}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0g6q0ng1dl55ti188dkou0rl63m4].[none:product_category_name_english:nk]' size='101' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g6q0ng1dl55ti188dkou0rl63m4].[yr:order_purchase_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E677DA6A-F9A7-46C5-96DF-FAAAD0B56728}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      bus8hr5nAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='119' name='Sheet 2' width='192'>
      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
      DoGE6CIkAELTJABC0yQAQtPk/wBC02QPIDRNAiA0TQIgNE0CIDRNAiA0TW6FEI5TW8DujRv4
      8lw9iuc4HktYRMSg1huS1cpDvLvmA45WqLgMeYC4xdHob/lncX9GHTYhHKLedmLry7bkLJPN
      Yrtqqz6zy7Yy6VPbd62OLbWlrVxp23Wm2nbVZrGZspJtLyYfttX/AnXIIZBwDPMJsssf4Ilw
      b5xQ6DtqFo+OzOXYhVbGXvgPXw19lFmj+qLghHf4E/y+5itOmB1fhwRAOMaPP4L/cBp/mlxh
      dKAPFVVqy7HVP+IxYniTJ815EDimJ5VVjq9DAiAcw3KFHi4uzf6kKD0xXSxvMfTKFTO9XZo/
      OqOHcpGLt/RD6T+vDgmAcAznXlyrb/6AIlW9is/Alj8x36uXjrr65sc719SBDBzo+DokAMIx
      +veHc4U0HsWonDllwtOjlatA/fpTdb6QxoOjKk59e5UBHi2H3uk6JADCMXTjCffaz4fZZVhR
      uXx2N58U3Evwb1oZ+5v7ue+7T9h99jIqVsqyP+R/3e5j/J14oFg7dcjdoMJxml1/n8iTz//0
      CHswpa9gM3Esa3gaWLP/A/hP49lnZt3wfFfH1CEBEJomh0BC0yQAQtMkAELTJABC0yQAQtMk
      AELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC
      0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELT/h8dVhx3WOee
      uAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3SU553vP+/0GY16770jVED0ZrobNuAW2yn2ruMkW3JzdnPu3r13szm7
      sW+aN3GCc5M4sZ2ycbApBtuAwIAEogiBhIQKEmpISEJlRnWKpr33D+08i5BwBAZih/mcw0Ga
      Gb1t3t/zPs+vfH+SLMsyPnzcoyj+3Afgw8efE58B+Lin8RmAj3sanwH4uKfxGYCPexqfAfi4
      p/EZgI97Gp8B+Lin8RmAj3sanwH4uKfxGYCPexqfAfi4p/EZgI97Gp8B+Lin8RmAj3sanwH4
      uKfxGYCPexqfAfi4p/EZgI97Gp8B+Lin8RmAj3sanwH4uKfxGYCPexqfAfi4p/EZgI97Gp8B
      +Lin8RmAj3sanwH4uKfxGYCPexqfAfi4p/EZgI97Gp8B+Lin8RmAj3sanwH4uKfxGYCPexqf
      Afi4p1H9uQ/Ax+y5vp+hJElTXvf+7mP2+AzgM8SFCxfo6ekhPj6egIAAVCoVCoWCtrY21Go1
      BQUFqFSf7CsdHh6mv7+fyMhIAgMDp7zndrtxOp3odLpPtI9PEz4D+AyhVqvx9/fHZDLhdrvp
      7+/HZrOhVqsJCAi4LftoaGhAo9EQFBREeXk5ERERBAUFceHCBfz9/blw4QKPPPIIYWFht2V/
      f258BvAZIy0tjf3795Ofn4/BYECWZUJCQtDpdFOmQE6nk9/+9rc8+eSTHD16lOzsbDo7O0lO
      Tubo0aMEBgby4IMPThvNHQ4HnZ2dBAUF0dfXx8WLF0lJScHtdhMZGYlKpSI4OPhun/Yd4y92
      ETwxMcGZM2dwOp1UVFRMmz/fSWw2G0NDQwB0dHRgsVgA6O3t/UTbjY+PJyQkhHXr1pGZmUlY
      WBipqanMmTOHiYkJPB6P+GxXVxcLFy6ks7OT0NBQBgcHsdlsKJVK1q1bx+LFi+np6Zm2j4CA
      ADZv3oyfnx8qlYqQkBCio6MZGBhgdHSUjo4ORkdHP9F5fJq4pSfAmTNncDgcZGZmMjAwwNDQ
      EF1dXYSFhREeHs6RI0eIj4/n4YcfRqvV3u5jnhFZlrHb7bjdbvR6PW63m4GBATweD/39/ciy
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      mmTw1gOJhAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
